{
    "multiCommand.commands": [
        { "command": "multiCommand.f11",
            "sequence": [ "workbench.action.files.saveAll",
                { "command": "workbench.action.terminal.sendSequence",
                    "args": {"text": "\u000D clear ; LANG=C make doxy \u000D"}}]},
        { "command": "multiCommand.f12",
            "sequence": [ "workbench.action.files.saveAll",
                { "command": "workbench.action.terminal.sendSequence",
                    "args": {"text": "\u000D clear ; LANG=C make test \u000D"}}]},
        { "command": "multiCommand.altx",
            "sequence": [ "workbench.action.files.saveAll",
                { "command": "workbench.action.terminal.sendSequence",
                    "args": {"text": "\u000D clear ; LANG=C make wine \u000D"}}]},
        { "command": "multiCommand.alts",
            "sequence": [ "workbench.action.files.saveAll",
                { "command": "workbench.action.terminal.sendSequence",
                    "args": {"text": "\u000D clear ; LANG=C make format \u000D"}}]},
    ],

    // files
    "files.exclude": {
        "docs/**": true,
        "target/**": true,
    },
    "files.watcherExclude": {
        "ref/**": true,
    },
    "files.associations": {
    },

    // editor
    "editor.tabSize": 4,
    "editor.insertSpaces": true,
    "editor.detectIndentation": false,
    "editor.rulers": [80],
    "workbench.tree.indent": 24,
    "editor.fontSize": 14,
    "editor.lineNumbers": "on",
    "explorer.autoReveal": false,
    "files.insertFinalNewline": true,
    "git.enabled": false,
    // "editor.inlayHints.enabled": "offUnlessPressed",

    // clang-format
    "clang-format.executable":    "clang-format",
    "clang-format.fallbackStyle": "Google",
    "clang-format.style":         "file",

    // C++
    "[c,cpp]": {
        "editor.defaultFormatter": "xaver.clang-format",
        "editor.formatOnSave":     true
    },
    "C_Cpp.intelliSenseEngine": "Tag Parser",

    // Rust
    "rust-analyzer.checkOnSave": true,
    "rust-analyzer.check.invocationStrategy": "once",
    "[rust]": {
        "editor.defaultFormatter": "rust-lang.rust-analyzer",
        "editor.formatOnSave": true
    },
}
